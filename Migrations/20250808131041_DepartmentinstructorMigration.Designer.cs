// <auto-generated />
using System;
using EF_Core_Session_1_Assim.itiDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EF_Core_Session_1_Assim.Migrations
{
    [DbContext(typeof(itiDbcontext))]
    [Migration("20250808131041_DepartmentinstructorMigration")]
    partial class DepartmentinstructorMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EF_Core_Session_1_Assim.Entities.Course", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Duration")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Top_ID")
                        .HasColumnType("int");

                    b.Property<int>("TopicsId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("TopicsId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("EF_Core_Session_1_Assim.Entities.Course_Inst", b =>
                {
                    b.Property<int>("Inst_Id")
                        .HasColumnType("int");

                    b.Property<int>("Course_Id")
                        .HasColumnType("int");

                    b.Property<int?>("CourseID")
                        .HasColumnType("int");

                    b.Property<decimal>("Evaluate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("InstructorId")
                        .HasColumnType("int");

                    b.HasKey("Inst_Id", "Course_Id");

                    b.HasIndex("CourseID");

                    b.HasIndex("InstructorId");

                    b.ToTable("Course_Inst");
                });

            modelBuilder.Entity("EF_Core_Session_1_Assim.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("HiringDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InstructorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InstructorId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("EF_Core_Session_1_Assim.Entities.Instructor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Bouns")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<decimal?>("HourRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Instructor", "dbo");
                });

            modelBuilder.Entity("EF_Core_Session_1_Assim.Entities.Stud_Course", b =>
                {
                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.HasKey("StudentID", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("Stud_Courses");
                });

            modelBuilder.Entity("EF_Core_Session_1_Assim.Entities.Student", b =>
                {
                    b.Property<int>("St_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("St_Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("St_Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("EF_Core_Session_1_Assim.Entities.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("EF_Core_Session_1_Assim.Entities.Course", b =>
                {
                    b.HasOne("EF_Core_Session_1_Assim.Entities.Topic", "Topics")
                        .WithMany("TopicCourses")
                        .HasForeignKey("TopicsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Topics");
                });

            modelBuilder.Entity("EF_Core_Session_1_Assim.Entities.Course_Inst", b =>
                {
                    b.HasOne("EF_Core_Session_1_Assim.Entities.Course", null)
                        .WithMany("courseInstructors")
                        .HasForeignKey("CourseID");

                    b.HasOne("EF_Core_Session_1_Assim.Entities.Instructor", null)
                        .WithMany("InstructorCourses")
                        .HasForeignKey("InstructorId");
                });

            modelBuilder.Entity("EF_Core_Session_1_Assim.Entities.Department", b =>
                {
                    b.HasOne("EF_Core_Session_1_Assim.Entities.Instructor", "Manager")
                        .WithMany()
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("EF_Core_Session_1_Assim.Entities.Instructor", b =>
                {
                    b.HasOne("EF_Core_Session_1_Assim.Entities.Department", "Department")
                        .WithMany("DeptInstructors")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("EF_Core_Session_1_Assim.Entities.Stud_Course", b =>
                {
                    b.HasOne("EF_Core_Session_1_Assim.Entities.Course", null)
                        .WithMany("courseStudents")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EF_Core_Session_1_Assim.Entities.Student", null)
                        .WithMany("studentCourses")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EF_Core_Session_1_Assim.Entities.Student", b =>
                {
                    b.HasOne("EF_Core_Session_1_Assim.Entities.Department", null)
                        .WithMany("DeptStudents")
                        .HasForeignKey("DepartmentId");
                });

            modelBuilder.Entity("EF_Core_Session_1_Assim.Entities.Course", b =>
                {
                    b.Navigation("courseInstructors");

                    b.Navigation("courseStudents");
                });

            modelBuilder.Entity("EF_Core_Session_1_Assim.Entities.Department", b =>
                {
                    b.Navigation("DeptInstructors");

                    b.Navigation("DeptStudents");
                });

            modelBuilder.Entity("EF_Core_Session_1_Assim.Entities.Instructor", b =>
                {
                    b.Navigation("InstructorCourses");
                });

            modelBuilder.Entity("EF_Core_Session_1_Assim.Entities.Student", b =>
                {
                    b.Navigation("studentCourses");
                });

            modelBuilder.Entity("EF_Core_Session_1_Assim.Entities.Topic", b =>
                {
                    b.Navigation("TopicCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
